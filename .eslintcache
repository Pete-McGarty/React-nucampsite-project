[{"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/partners.js":"12","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/comments.js":"13","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/reducer.js":"17"},{"size":696,"mtime":1612374904913,"results":"18","hashOfConfig":"19"},{"size":546,"mtime":1613156144974,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611760356276,"results":"21","hashOfConfig":"19"},{"size":1398,"mtime":1612551976935,"results":"22","hashOfConfig":"19"},{"size":1242,"mtime":1612519509628,"results":"23","hashOfConfig":"19"},{"size":2204,"mtime":1612552385219,"results":"24","hashOfConfig":"19"},{"size":2201,"mtime":1613163983885,"results":"25","hashOfConfig":"19"},{"size":5179,"mtime":1612985441764,"results":"26","hashOfConfig":"19"},{"size":1911,"mtime":1612482194006,"results":"27","hashOfConfig":"19"},{"size":943,"mtime":1612520439676,"results":"28","hashOfConfig":"19"},{"size":9726,"mtime":1612906711743,"results":"29","hashOfConfig":"19"},{"size":1054,"mtime":1612519547366,"results":"30","hashOfConfig":"19"},{"size":4243,"mtime":1612519533218,"results":"31","hashOfConfig":"19"},{"size":303,"mtime":1612519562890,"results":"32","hashOfConfig":"19"},{"size":4032,"mtime":1612634262105,"results":"33","hashOfConfig":"19"},{"size":224,"mtime":1613155123535,"results":"34","hashOfConfig":"19"},{"size":409,"mtime":1613155061334,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"bhhx71",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/index.js",[],["73","74"],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",["75"],"import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, \n    Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { focusableElements } from 'reactstrap/lib/utils';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n    }\n\n    toggleModal () {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    toggleNav () {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    handleLogin(event) {\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`);\n        this.toggleModal();\n        event.preventDefault();\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Jumbotron fluid>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1>NuCamp</h1>\n                                <h2>a better way to camp</h2>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>    \n                <Navbar dark sticky=\"top\" expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"/assets/images/logo.png\" height=\"30\" width=\"30\" alt=\"NuCamp logo\" /></NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <i className=\"fa fa-home fa-lg\"/>Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/directory\">\n                                        <i className=\"fa fa-list fa-lg\"/>Directory\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <i className=\"fa fa-info fa-lg\"/>About\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <i className=\"fa fa-adress-card fa-lg\"/>Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <span className=\"navbar-text ml-auto\">\n                                    <Button outline onClick={this.toggleModal}>\n                                        <i className=\"fa fa-sign-in fa-lg\"/>Login\n                                    </Button>\n                            </span>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                                <FormGroup>\n                                    <Label htmlFor=\"username\">Username</Label>\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\n                                        innerRef={input => this.username = input} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"password\">Password</Label>\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\n                                        innerRef={input => this.password = input} />\n                                </FormGroup>\n                                <FormGroup check>\n                                    <Label check>\n                                        <Input type=\"checkbox\" name=\"remember\"\n                                            innerRef={input => this.remember = input} />\n                                        Remember me\n                                    </Label>\n                                </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["76"],"import { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport React, {Component} from 'react';\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false, \n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    validate (firstName, lastName, phoneNum, email) {\n        const errors = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: ''\n        }\n        if (this.state.touched.firstName){\n            if (firstName.length < 2) {\n                errors.firstName = 'First name must be at least 2 characters.';\n            } else if (firstName.length > 15) {\n                errors.firstName = 'First name must be 15 characters or less.'\n            }\n        }\n\n        if (this.state.touched.lastName){\n            if (lastName.length < 2) {\n                errors.lastName = 'Last name must be at least 2 characters.';\n            } else if (lastName.length > 15) {\n                errors.lastName = 'Last name must be 15 characters or less.'\n            }\n        }\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.phoneNum && !reg.test(phoneNum)) {\n            errors.phoneNum = 'The phone number should contain only numbers.';\n        }\n\n        if (this.state.touched. email && !email.includes ('@')) {\n            errors.email = 'Email should contain an @ symbol.';\n        }\n\n        return errors;\n    }\n\n    handleBlur = (field) => () => {\n        this.setState({\n            touched: {...this.state.touched, [field]: true}\n        });\n    }\n\n    handleInputChange(event){\n        const target = event.target;\n        const name = target.name;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n\n        this.setState ({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event){\n        console.log(\"Current state is: \" + JSON.stringify(this.state));\n        alert(\"Current state is: \" + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n    render(){\n        const errors = this.validate(this.state.firstName, this.state.lastName, this.state.phoneNum, this.state.email);\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstName}\n                                        invalid={errors.firstName}\n                                        onBlur={this.handleBlur(\"firstName\")}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.firstName}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastName}\n                                        invalid={errors.lastName}\n                                        onBlur={this.handleBlur(\"lastName\")}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.lastName}</FormFeedback>\n                                </Col>                        \n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Input type=\"tel\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        value={this.state.phoneNum}\n                                        invalid={errors.phoneNum}\n                                        onBlur={this.handleBlur(\"phoneNum\")}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.phoneNum}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        invalid={errors.email}\n                                        onBlur={this.handleBlur(\"email\")}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.email}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 4, offset: 2}}>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\"\n                                                name=\"agree\"\n                                                checked={this.state.agree}\n                                                onChange={this.handleInputChange} /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </FormGroup>\n                                </Col>\n                                <Col md={4}>\n                                    <Input type=\"select\" name=\"contactType\"\n                                            value={this.state.contactType}\n                                            onChange={this.handleInputChange}>\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        value={this.state.feedback}\n                                        onChange={this.handleInputChange}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/reducer.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":57,"column":13,"nodeType":"87","messageId":"88","endLine":57,"endColumn":38,"fix":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'focusableElements' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property email.","MemberExpression","unexpectedWhitespace",{"range":"92","text":"93"},"no-global-assign","no-unsafe-negation",[1833,1835],"."]