[{"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/partners.js":"12","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/comments.js":"13","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/campsites.js":"17","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/comments.js":"18","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":696,"mtime":1612374904913,"results":"26","hashOfConfig":"27"},{"size":546,"mtime":1613156144974,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611760356276,"results":"29","hashOfConfig":"27"},{"size":2049,"mtime":1613766241150,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1612519509628,"results":"31","hashOfConfig":"27"},{"size":7569,"mtime":1613938657924,"results":"32","hashOfConfig":"27"},{"size":4348,"mtime":1613949986818,"results":"33","hashOfConfig":"27"},{"size":5450,"mtime":1613837176414,"results":"34","hashOfConfig":"27"},{"size":1911,"mtime":1612482194006,"results":"35","hashOfConfig":"27"},{"size":1947,"mtime":1613942113896,"results":"36","hashOfConfig":"27"},{"size":10899,"mtime":1613950334122,"results":"37","hashOfConfig":"27"},{"size":1054,"mtime":1612519547366,"results":"38","hashOfConfig":"27"},{"size":4243,"mtime":1612519533218,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1612519562890,"results":"40","hashOfConfig":"27"},{"size":4678,"mtime":1613953718529,"results":"41","hashOfConfig":"27"},{"size":852,"mtime":1613597882124,"results":"42","hashOfConfig":"27"},{"size":603,"mtime":1613593530867,"results":"43","hashOfConfig":"27"},{"size":617,"mtime":1613781912815,"results":"44","hashOfConfig":"27"},{"size":684,"mtime":1613942187649,"results":"45","hashOfConfig":"27"},{"size":696,"mtime":1613773292578,"results":"46","hashOfConfig":"27"},{"size":5925,"mtime":1613952334787,"results":"47","hashOfConfig":"27"},{"size":592,"mtime":1613941077502,"results":"48","hashOfConfig":"27"},{"size":233,"mtime":1613593731130,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1613597670056,"results":"50","hashOfConfig":"27"},{"size":49,"mtime":1613772808986,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"bhhx71",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/index.js",[],["110","111"],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["112","113","114"],"import React from 'react';\nimport {Component} from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button } from 'reactstrap';\nimport { Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.state = {\n            isModalOpen: false,\n            touched:{\n                author:false\n            }\n        };\n    }\n\n    toggleModal () {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n    }\n\n    render () {\n        return(\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg \"/>\n                    Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                    className=\"form-control\"\n                                    placeholder=\"Name\"\n                                    validators={{ \n                                        minLength: minLength(2),\n                                        maxLength: maxLength(15)\n                                    }}\n                                />\n                                <Errors\n                                        className=\"text-danger\" \n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\n                                    <option>How was it?</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Review</Label>\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\" rows=\"6\"\n                                    className=\"form-control\"\n                                    placeholder=\"Please leave your review\"\n\n                                />\n                            </div>\n                            <Button type=\"submit\" color=\"primary\">\n                                    Submit\n                            </Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    };\n}\n\nfunction RenderCampsite({campsite}){\n    return (\n        <div className=\"col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl+campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardTitle>{campsite.name}</CardTitle>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n    );\n}\n\nfunction RenderComments({comments, postComment, campsiteId}){\n    if (comments){\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                <Stagger in>\n                    {\n                        comments.map(comment => {\n                            return (\n                                <Fade in key={comment.id}>\n                                    <div>\n                                        <p>\n                                            {comment.text}<br />\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\n                                        </p>\n                                    </div>\n                                </Fade>\n                            );\n                        })\n                    }\n                </Stagger>\n                <CommentForm campsiteId={campsiteId} postComment={postComment}/>   \n            </div>\n        )\n    } \n        return  <div /> ;\n}\n\nfunction CampsiteInfo (props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr/>\n                    </div>\n            </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite}/>\n                    <RenderComments \n                        comments={props.comments} \n                        postComment={props.postComment}\n                        campsiteId={props.campsite.id}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\n\n\nexport default CampsiteInfo;","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",["115","116"],"import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, \n    Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n    }\n\n    toggleModal () {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    toggleNav () {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    handleLogin(event) {\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`);\n        this.toggleModal();\n        event.preventDefault();\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Jumbotron fluid>\n                    <FadeTransform in\n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateX(-50%)'\n                        }}>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <h1>NuCamp</h1>\n                                    <h2>a better way to camp</h2>\n                                </div>\n                            </div>\n                        </div>\n                    </FadeTransform>   \n                </Jumbotron>    \n                <Navbar dark sticky=\"top\" expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"/assets/images/logo.png\" height=\"30\" width=\"30\" alt=\"NuCamp logo\" /></NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <i className=\"fa fa-home fa-lg\"/>Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/directory\">\n                                        <i className=\"fa fa-list fa-lg\"/>Directory\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <i className=\"fa fa-info fa-lg\"/>About\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <i className=\"fa fa-adress-card fa-lg\"/>Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <span className=\"navbar-text ml-auto\">\n                                    <Button outline onClick={this.toggleModal}>\n                                        <i className=\"fa fa-sign-in fa-lg\"/>Login\n                                    </Button>\n                            </span>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                                <FormGroup>\n                                    <Label htmlFor=\"username\">Username</Label>\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\n                                        innerRef={input => this.username = input} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"password\">Password</Label>\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\n                                        innerRef={input => this.password = input} />\n                                </FormGroup>\n                                <FormGroup check>\n                                    <Label check>\n                                        <Input type=\"checkbox\" name=\"remember\"\n                                            innerRef={input => this.remember = input} />\n                                        Remember me\n                                    </Label>\n                                </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["117","118","119","120","121","122","123","124","125","126"],"import { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport React, {Component} from 'react';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false, \n                phoneNum: false,\n                email: false\n            }\n        };\n    }\n\n    handleSubmit(values) {\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(values);\n    }\n\n\n    render(){\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\" \n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\" \n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],["127","128"],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/configureStore.js",["129"],"import PopperTargetHelper from 'reactstrap/lib/PopperTargetHelper';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {Campsites} from './campsites';\nimport {Comments} from  './comments';\nimport {Partners} from './partners';\nimport {Promotions} from './promotions';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            campsites: Campsites,\n            comments: Comments,\n            partners: Partners,\n            promotions: Promotions,\n            ...createForms({\n                feedbackForm: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/comments.js",["130"],"import {COMMENTS} from '../shared/comments';\nimport * as ActionTypes from './ActionTypes';\n\n\n\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:\n            const comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",["131"],"import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../shared/baseUrl';\nimport { CAMPSITES } from '../shared/campsites';\n\n\nexport const fetchCampsites = () => dispatch => {\n    dispatch(campsitesLoading());\n\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n            if (response.ok){\n                return response;\n             } else {\n                 const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                 error.response = response;\n                 throw error;\n             }\n        },\n        error => {\n            const errMess = new Error(error.message);\n            throw errMess;\n        }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n};\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\n\nexport const fetchComments = () => dispatch => {\n    return fetch (baseUrl + 'comments')\n    .then(response => {\n        if (response.ok){\n            return response;\n         } else {\n             const error = new Error(`Error ${response.status}: ${response.statusText}`);\n             error.response = response;\n             throw error;\n         }\n    },\n    error => {\n        const errMess = new Error(error.message);\n        throw errMess;\n    }\n    )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\n\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n    \n    const newComment = {\n        campsiteId: campsiteId,\n        rating: rating,\n        author: author,\n        text: text\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    .then(response => {\n        if(response.ok){\n            return response;\n        } else {\n\n            const error = new Error(`Error ${response.status}: ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => { throw error; }\n    )\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n        console.log('post comment', error.message);\n        alert('Your comment could not be posted\\nError: ' + error.message);\n    });\n};\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok){\n            return response;\n         } else {\n             const error = new Error(`Error ${response.status}: ${response.statusText}`);\n             error.response = response;\n             throw error;\n         }\n    },\n    error => {\n        const errMess = new Error(error.message);\n        throw errMess;\n    }\n    )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});\n\nexport const fetchPartners = () => dispatch => {\n    dispatch(partnersLoading());\n\n    return fetch(baseUrl + 'partners')\n    .then(response => {\n        if (response.ok){\n            return response;\n         } else {\n             const error = new Error(`Error ${response.status}: ${response.statusText}`);\n             error.response = response;\n             throw error;\n         }\n    },\n    error => {\n        const errMess = new Error(error.message);\n        throw errMess;\n    }\n    )\n        .then(response => response.json())\n        .then(partners => dispatch(addPartners(partners)))\n        .catch(error => dispatch(partnersFailed(error.message)));\n};\n\nexport const partnersLoading = () => ({\n    type: ActionTypes.PARTNERS_LOADING\n});\n\nexport const partnersFailed = errMess => ({\n    type: ActionTypes.PARTNERS_FAILED,\n    payload: errMess\n});\n\nexport const addPartners = partners => ({\n    type: ActionTypes.ADD_PARTNERS,\n    payload: partners\n});\n\nexport const postFeedback = (values) => () => {\n    \n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(values),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    .then(response => {\n        if(response.ok){\n            return response;\n        } else {\n\n            const error = new Error(`Error ${response.status}: ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n    },\n        error => { throw error; }\n    )\n\n    .then(response => response.json())\n    .then(response => alert(`Thank you for your feedback. \\n` + JSON.stringify(response)))\n    .catch(error => {\n        console.log('post feedback', error.message);\n        alert('Your feedback could not be posted\\nError: ' + error.message);\n    })\n}","/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/petermcgarty/Downloads/NuCamp /NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":52,"column":33,"nodeType":"138","endLine":59,"endColumn":35},{"ruleId":"136","severity":1,"message":"139","line":73,"column":33,"nodeType":"138","endLine":73,"endColumn":116},{"ruleId":"136","severity":1,"message":"140","line":84,"column":33,"nodeType":"138","endLine":88,"endColumn":35},{"ruleId":"141","severity":1,"message":"142","line":5,"column":25,"nodeType":"143","messageId":"144","endLine":5,"endColumn":29},{"ruleId":"141","severity":1,"message":"145","line":5,"column":31,"nodeType":"143","messageId":"144","endLine":5,"endColumn":38},{"ruleId":"141","severity":1,"message":"146","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":5,"column":25,"nodeType":"143","messageId":"144","endLine":5,"endColumn":29},{"ruleId":"141","severity":1,"message":"145","line":5,"column":31,"nodeType":"143","messageId":"144","endLine":5,"endColumn":38},{"ruleId":"136","severity":1,"message":"137","line":80,"column":37,"nodeType":"138","endLine":88,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":105,"column":37,"nodeType":"138","endLine":113,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":130,"column":37,"nodeType":"138","endLine":139,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":157,"column":37,"nodeType":"138","endLine":164,"endColumn":39},{"ruleId":"136","severity":1,"message":"147","line":181,"column":45,"nodeType":"138","endLine":185,"endColumn":47},{"ruleId":"136","severity":1,"message":"139","line":191,"column":37,"nodeType":"138","endLine":191,"endColumn":118},{"ruleId":"136","severity":1,"message":"140","line":200,"column":37,"nodeType":"138","endLine":203,"endColumn":39},{"ruleId":"132","replacedBy":"148"},{"ruleId":"134","replacedBy":"149"},{"ruleId":"141","severity":1,"message":"150","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"151","line":1,"column":9,"nodeType":"143","messageId":"144","endLine":1,"endColumn":17},{"ruleId":"141","severity":1,"message":"152","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":19},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Fade' is defined but never used.","Identifier","unusedVar","'Stagger' is defined but never used.","'FadeTransform' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["153"],["154"],"'PopperTargetHelper' is defined but never used.","'COMMENTS' is defined but never used.","'CAMPSITES' is defined but never used.","no-global-assign","no-unsafe-negation"]